package com.zhidisoft.crm.mapper;

import com.zhidisoft.crm.entity.TbCrmLeads;
import com.zhidisoft.crm.entity.TbCrmLeadsExample.Criteria;
import com.zhidisoft.crm.entity.TbCrmLeadsExample.Criterion;
import com.zhidisoft.crm.entity.TbCrmLeadsExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class TbCrmLeadsSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	public String countByExample(TbCrmLeadsExample example) {
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("TB_CRM_LEADS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	public String deleteByExample(TbCrmLeadsExample example) {
		SQL sql = new SQL();
		sql.DELETE_FROM("TB_CRM_LEADS");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	public String insertSelective(TbCrmLeads record) {
		SQL sql = new SQL();
		sql.INSERT_INTO("TB_CRM_LEADS");
		sql.VALUES("LEADSID", "#{leadsid,jdbcType=VARCHAR}");
		if (record.getOwneruserid() != null) {
			sql.VALUES("OWNERUSERID", "#{owneruserid,jdbcType=VARCHAR}");
		}
		if (record.getCreatoruserid() != null) {
			sql.VALUES("CREATORUSERID", "#{creatoruserid,jdbcType=VARCHAR}");
		}
		if (record.getName() != null) {
			sql.VALUES("NAME", "#{name,jdbcType=VARCHAR}");
		}
		if (record.getPosition() != null) {
			sql.VALUES("POSITION", "#{position,jdbcType=VARCHAR}");
		}
		if (record.getContactsname() != null) {
			sql.VALUES("CONTACTSNAME", "#{contactsname,jdbcType=VARCHAR}");
		}
		if (record.getSaltname() != null) {
			sql.VALUES("SALTNAME", "#{saltname,jdbcType=VARCHAR}");
		}
		if (record.getMobile() != null) {
			sql.VALUES("MOBILE", "#{mobile,jdbcType=VARCHAR}");
		}
		if (record.getEmail() != null) {
			sql.VALUES("EMAIL", "#{email,jdbcType=VARCHAR}");
		}
		if (record.getCreatetime() != null) {
			sql.VALUES("CREATETIME", "#{createtime,jdbcType=TIMESTAMP}");
		}
		if (record.getUpdatetime() != null) {
			sql.VALUES("UPDATETIME", "#{updatetime,jdbcType=TIMESTAMP}");
		}
		if (record.getIsdeleted() != null) {
			sql.VALUES("ISDELETED", "#{isdeleted,jdbcType=DECIMAL}");
		}
		if (record.getDeleteuserid() != null) {
			sql.VALUES("DELETEUSERID", "#{deleteuserid,jdbcType=VARCHAR}");
		}
		if (record.getDeletetime() != null) {
			sql.VALUES("DELETETIME", "#{deletetime,jdbcType=TIMESTAMP}");
		}
		if (record.getIstransformed() != null) {
			sql.VALUES("ISTRANSFORMED", "#{istransformed,jdbcType=DECIMAL}");
		}
		if (record.getTransformuserid() != null) {
			sql.VALUES("TRANSFORMUSERID", "#{transformuserid,jdbcType=VARCHAR}");
		}
		if (record.getContactsid() != null) {
			sql.VALUES("CONTACTSID", "#{contactsid,jdbcType=VARCHAR}");
		}
		if (record.getCustomerid() != null) {
			sql.VALUES("CUSTOMERID", "#{customerid,jdbcType=VARCHAR}");
		}
		if (record.getBusinessid() != null) {
			sql.VALUES("BUSINESSID", "#{businessid,jdbcType=VARCHAR}");
		}
		if (record.getNextstep() != null) {
			sql.VALUES("NEXTSTEP", "#{nextstep,jdbcType=VARCHAR}");
		}
		if (record.getNextsteptime() != null) {
			sql.VALUES("NEXTSTEPTIME", "#{nextsteptime,jdbcType=TIMESTAMP}");
		}
		if (record.getHavetime() != null) {
			sql.VALUES("HAVETIME", "#{havetime,jdbcType=TIMESTAMP}");
		}
		if (record.getAddress() != null) {
			sql.VALUES("ADDRESS", "#{address,jdbcType=VARCHAR}");
		}
		if (record.getSource() != null) {
			sql.VALUES("SOURCE", "#{source,jdbcType=VARCHAR}");
		}
		if (record.getLeadnote() != null) {
			sql.VALUES("LEADNOTE", "#{leadnote,jdbcType=VARCHAR}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	public String selectByExample(TbCrmLeadsExample example) {
		SQL sql = new SQL();
		if (example != null && example.isDistinct()) {
			sql.SELECT_DISTINCT("LEADSID");
		} else {
			sql.SELECT("LEADSID");
		}
		sql.SELECT("OWNERUSERID");
		sql.SELECT("CREATORUSERID");
		sql.SELECT("NAME");
		sql.SELECT("POSITION");
		sql.SELECT("CONTACTSNAME");
		sql.SELECT("SALTNAME");
		sql.SELECT("MOBILE");
		sql.SELECT("EMAIL");
		sql.SELECT("CREATETIME");
		sql.SELECT("UPDATETIME");
		sql.SELECT("ISDELETED");
		sql.SELECT("DELETEUSERID");
		sql.SELECT("DELETETIME");
		sql.SELECT("ISTRANSFORMED");
		sql.SELECT("TRANSFORMUSERID");
		sql.SELECT("CONTACTSID");
		sql.SELECT("CUSTOMERID");
		sql.SELECT("BUSINESSID");
		sql.SELECT("NEXTSTEP");
		sql.SELECT("NEXTSTEPTIME");
		sql.SELECT("HAVETIME");
		sql.SELECT("ADDRESS");
		sql.SELECT("SOURCE");
		sql.SELECT("LEADNOTE");
		sql.FROM("TB_CRM_LEADS");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null) {
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	public String updateByExampleSelective(Map<String, Object> parameter) {
		TbCrmLeads record = (TbCrmLeads) parameter.get("record");
		TbCrmLeadsExample example = (TbCrmLeadsExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("TB_CRM_LEADS");
		if (record.getLeadsid() != null) {
			sql.SET("LEADSID = #{record.leadsid,jdbcType=VARCHAR}");
		}
		if (record.getOwneruserid() != null) {
			sql.SET("OWNERUSERID = #{record.owneruserid,jdbcType=VARCHAR}");
		}
		if (record.getCreatoruserid() != null) {
			sql.SET("CREATORUSERID = #{record.creatoruserid,jdbcType=VARCHAR}");
		}
		if (record.getName() != null) {
			sql.SET("NAME = #{record.name,jdbcType=VARCHAR}");
		}
		if (record.getPosition() != null) {
			sql.SET("POSITION = #{record.position,jdbcType=VARCHAR}");
		}
		if (record.getContactsname() != null) {
			sql.SET("CONTACTSNAME = #{record.contactsname,jdbcType=VARCHAR}");
		}
		if (record.getSaltname() != null) {
			sql.SET("SALTNAME = #{record.saltname,jdbcType=VARCHAR}");
		}
		if (record.getMobile() != null) {
			sql.SET("MOBILE = #{record.mobile,jdbcType=VARCHAR}");
		}
		if (record.getEmail() != null) {
			sql.SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
		}
		if (record.getCreatetime() != null) {
			sql.SET("CREATETIME = #{record.createtime,jdbcType=TIMESTAMP}");
		}
		if (record.getUpdatetime() != null) {
			sql.SET("UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP}");
		}
		if (record.getIsdeleted() != null) {
			sql.SET("ISDELETED = #{record.isdeleted,jdbcType=DECIMAL}");
		}
		if (record.getDeleteuserid() != null) {
			sql.SET("DELETEUSERID = #{record.deleteuserid,jdbcType=VARCHAR}");
		}
		if (record.getDeletetime() != null) {
			sql.SET("DELETETIME = #{record.deletetime,jdbcType=TIMESTAMP}");
		}
		if (record.getIstransformed() != null) {
			sql.SET("ISTRANSFORMED = #{record.istransformed,jdbcType=DECIMAL}");
		}
		if (record.getTransformuserid() != null) {
			sql.SET("TRANSFORMUSERID = #{record.transformuserid,jdbcType=VARCHAR}");
		}
		if (record.getContactsid() != null) {
			sql.SET("CONTACTSID = #{record.contactsid,jdbcType=VARCHAR}");
		}
		if (record.getCustomerid() != null) {
			sql.SET("CUSTOMERID = #{record.customerid,jdbcType=VARCHAR}");
		}
		if (record.getBusinessid() != null) {
			sql.SET("BUSINESSID = #{record.businessid,jdbcType=VARCHAR}");
		}
		if (record.getNextstep() != null) {
			sql.SET("NEXTSTEP = #{record.nextstep,jdbcType=VARCHAR}");
		}
		if (record.getNextsteptime() != null) {
			sql.SET("NEXTSTEPTIME = #{record.nextsteptime,jdbcType=TIMESTAMP}");
		}
		if (record.getHavetime() != null) {
			sql.SET("HAVETIME = #{record.havetime,jdbcType=TIMESTAMP}");
		}
		if (record.getAddress() != null) {
			sql.SET("ADDRESS = #{record.address,jdbcType=VARCHAR}");
		}
		if (record.getSource() != null) {
			sql.SET("SOURCE = #{record.source,jdbcType=VARCHAR}");
		}
		if (record.getLeadnote() != null) {
			sql.SET("LEADNOTE = #{record.leadnote,jdbcType=VARCHAR}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	public String updateByExample(Map<String, Object> parameter) {
		SQL sql = new SQL();
		sql.UPDATE("TB_CRM_LEADS");
		sql.SET("LEADSID = #{record.leadsid,jdbcType=VARCHAR}");
		sql.SET("OWNERUSERID = #{record.owneruserid,jdbcType=VARCHAR}");
		sql.SET("CREATORUSERID = #{record.creatoruserid,jdbcType=VARCHAR}");
		sql.SET("NAME = #{record.name,jdbcType=VARCHAR}");
		sql.SET("POSITION = #{record.position,jdbcType=VARCHAR}");
		sql.SET("CONTACTSNAME = #{record.contactsname,jdbcType=VARCHAR}");
		sql.SET("SALTNAME = #{record.saltname,jdbcType=VARCHAR}");
		sql.SET("MOBILE = #{record.mobile,jdbcType=VARCHAR}");
		sql.SET("EMAIL = #{record.email,jdbcType=VARCHAR}");
		sql.SET("CREATETIME = #{record.createtime,jdbcType=TIMESTAMP}");
		sql.SET("UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP}");
		sql.SET("ISDELETED = #{record.isdeleted,jdbcType=DECIMAL}");
		sql.SET("DELETEUSERID = #{record.deleteuserid,jdbcType=VARCHAR}");
		sql.SET("DELETETIME = #{record.deletetime,jdbcType=TIMESTAMP}");
		sql.SET("ISTRANSFORMED = #{record.istransformed,jdbcType=DECIMAL}");
		sql.SET("TRANSFORMUSERID = #{record.transformuserid,jdbcType=VARCHAR}");
		sql.SET("CONTACTSID = #{record.contactsid,jdbcType=VARCHAR}");
		sql.SET("CUSTOMERID = #{record.customerid,jdbcType=VARCHAR}");
		sql.SET("BUSINESSID = #{record.businessid,jdbcType=VARCHAR}");
		sql.SET("NEXTSTEP = #{record.nextstep,jdbcType=VARCHAR}");
		sql.SET("NEXTSTEPTIME = #{record.nextsteptime,jdbcType=TIMESTAMP}");
		sql.SET("HAVETIME = #{record.havetime,jdbcType=TIMESTAMP}");
		sql.SET("ADDRESS = #{record.address,jdbcType=VARCHAR}");
		sql.SET("SOURCE = #{record.source,jdbcType=VARCHAR}");
		sql.SET("LEADNOTE = #{record.leadnote,jdbcType=VARCHAR}");
		TbCrmLeadsExample example = (TbCrmLeadsExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	public String updateByPrimaryKeySelective(TbCrmLeads record) {
		SQL sql = new SQL();
		sql.UPDATE("TB_CRM_LEADS");
		if (record.getOwneruserid() != null) {
			sql.SET("OWNERUSERID = #{owneruserid,jdbcType=VARCHAR}");
		}
		if (record.getCreatoruserid() != null) {
			sql.SET("CREATORUSERID = #{creatoruserid,jdbcType=VARCHAR}");
		}
		if (record.getName() != null) {
			sql.SET("NAME = #{name,jdbcType=VARCHAR}");
		}
		if (record.getPosition() != null) {
			sql.SET("POSITION = #{position,jdbcType=VARCHAR}");
		}
		if (record.getContactsname() != null) {
			sql.SET("CONTACTSNAME = #{contactsname,jdbcType=VARCHAR}");
		}
		if (record.getSaltname() != null) {
			sql.SET("SALTNAME = #{saltname,jdbcType=VARCHAR}");
		}
		if (record.getMobile() != null) {
			sql.SET("MOBILE = #{mobile,jdbcType=VARCHAR}");
		}
		if (record.getEmail() != null) {
			sql.SET("EMAIL = #{email,jdbcType=VARCHAR}");
		}
		if (record.getCreatetime() != null) {
			sql.SET("CREATETIME = #{createtime,jdbcType=TIMESTAMP}");
		}
		if (record.getUpdatetime() != null) {
			sql.SET("UPDATETIME = #{updatetime,jdbcType=TIMESTAMP}");
		}
		if (record.getIsdeleted() != null) {
			sql.SET("ISDELETED = #{isdeleted,jdbcType=DECIMAL}");
		}
		if (record.getDeleteuserid() != null) {
			sql.SET("DELETEUSERID = #{deleteuserid,jdbcType=VARCHAR}");
		}
		if (record.getDeletetime() != null) {
			sql.SET("DELETETIME = #{deletetime,jdbcType=TIMESTAMP}");
		}
		if (record.getIstransformed() != null) {
			sql.SET("ISTRANSFORMED = #{istransformed,jdbcType=DECIMAL}");
		}
		if (record.getTransformuserid() != null) {
			sql.SET("TRANSFORMUSERID = #{transformuserid,jdbcType=VARCHAR}");
		}
		if (record.getContactsid() != null) {
			sql.SET("CONTACTSID = #{contactsid,jdbcType=VARCHAR}");
		}
		if (record.getCustomerid() != null) {
			sql.SET("CUSTOMERID = #{customerid,jdbcType=VARCHAR}");
		}
		if (record.getBusinessid() != null) {
			sql.SET("BUSINESSID = #{businessid,jdbcType=VARCHAR}");
		}
		if (record.getNextstep() != null) {
			sql.SET("NEXTSTEP = #{nextstep,jdbcType=VARCHAR}");
		}
		if (record.getNextsteptime() != null) {
			sql.SET("NEXTSTEPTIME = #{nextsteptime,jdbcType=TIMESTAMP}");
		}
		if (record.getHavetime() != null) {
			sql.SET("HAVETIME = #{havetime,jdbcType=TIMESTAMP}");
		}
		if (record.getAddress() != null) {
			sql.SET("ADDRESS = #{address,jdbcType=VARCHAR}");
		}
		if (record.getSource() != null) {
			sql.SET("SOURCE = #{source,jdbcType=VARCHAR}");
		}
		if (record.getLeadnote() != null) {
			sql.SET("LEADNOTE = #{leadnote,jdbcType=VARCHAR}");
		}
		sql.WHERE("LEADSID = #{leadsid,jdbcType=VARCHAR}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table TB_CRM_LEADS
	 * @mbg.generated  Wed Apr 25 09:38:58 CST 2018
	 */
	protected void applyWhere(SQL sql, TbCrmLeadsExample example, boolean includeExamplePhrase) {
		if (example == null) {
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase) {
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else {
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++) {
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid()) {
				if (firstCriteria) {
					firstCriteria = false;
				} else {
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++) {
					Criterion criterion = criterions.get(j);
					if (firstCriterion) {
						firstCriterion = false;
					} else {
						sb.append(" and ");
					}
					if (criterion.isNoValue()) {
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else {
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue()) {
						if (criterion.getTypeHandler() == null) {
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else {
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue()) {
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++) {
							if (comma) {
								sb.append(", ");
							} else {
								comma = true;
							}
							if (criterion.getTypeHandler() == null) {
								sb.append(String.format(parmPhrase3, i, j, k));
							} else {
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0) {
			sql.WHERE(sb.toString());
		}
	}
}