package com.zhidisoft.crm.mapper;

import com.zhidisoft.crm.entity.TbCrmContract;
import com.zhidisoft.crm.entity.TbCrmContractExample.Criteria;
import com.zhidisoft.crm.entity.TbCrmContractExample.Criterion;
import com.zhidisoft.crm.entity.TbCrmContractExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class TbCrmContractSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String countByExample(TbCrmContractExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("TB_CRM_CONTRACT");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String deleteByExample(TbCrmContractExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("TB_CRM_CONTRACT");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String insertSelective(TbCrmContract record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("TB_CRM_CONTRACT");
        
        sql.VALUES("CONTRACTID", "#{contractid,jdbcType=VARCHAR}");
        
        if (record.getContractnumber() != null) {
            sql.VALUES("CONTRACTNUMBER", "#{contractnumber,jdbcType=VARCHAR}");
        }
        
        if (record.getBusinessid() != null) {
            sql.VALUES("BUSINESSID", "#{businessid,jdbcType=VARCHAR}");
        }
        
        if (record.getPrice() != null) {
            sql.VALUES("PRICE", "#{price,jdbcType=DECIMAL}");
        }
        
        if (record.getDuetime() != null) {
            sql.VALUES("DUETIME", "#{duetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOwneruserid() != null) {
            sql.VALUES("OWNERUSERID", "#{owneruserid,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatoruserid() != null) {
            sql.VALUES("CREATORUSERID", "#{creatoruserid,jdbcType=VARCHAR}");
        }
        
        if (record.getDescription() != null) {
            sql.VALUES("DESCRIPTION", "#{description,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatetime() != null) {
            sql.VALUES("CREATETIME", "#{createtime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatetime() != null) {
            sql.VALUES("UPDATETIME", "#{updatetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStartdate() != null) {
            sql.VALUES("STARTDATE", "#{startdate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getEnddate() != null) {
            sql.VALUES("ENDDATE", "#{enddate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStatus() != null) {
            sql.VALUES("STATUS", "#{status,jdbcType=VARCHAR}");
        }
        
        if (record.getIsdeleted() != null) {
            sql.VALUES("ISDELETED", "#{isdeleted,jdbcType=DECIMAL}");
        }
        
        if (record.getDeleteuserid() != null) {
            sql.VALUES("DELETEUSERID", "#{deleteuserid,jdbcType=VARCHAR}");
        }
        
        if (record.getDeletetime() != null) {
            sql.VALUES("DELETETIME", "#{deletetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContractcontent() != null) {
            sql.VALUES("CONTRACTCONTENT", "#{contractcontent,jdbcType=BLOB}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String selectByExampleWithBLOBs(TbCrmContractExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("CONTRACTID");
        } else {
            sql.SELECT("CONTRACTID");
        }
        sql.SELECT("CONTRACTNUMBER");
        sql.SELECT("BUSINESSID");
        sql.SELECT("PRICE");
        sql.SELECT("DUETIME");
        sql.SELECT("OWNERUSERID");
        sql.SELECT("CREATORUSERID");
        sql.SELECT("DESCRIPTION");
        sql.SELECT("CREATETIME");
        sql.SELECT("UPDATETIME");
        sql.SELECT("STARTDATE");
        sql.SELECT("ENDDATE");
        sql.SELECT("STATUS");
        sql.SELECT("ISDELETED");
        sql.SELECT("DELETEUSERID");
        sql.SELECT("DELETETIME");
        sql.SELECT("CONTRACTCONTENT");
        sql.FROM("TB_CRM_CONTRACT");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String selectByExample(TbCrmContractExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("CONTRACTID");
        } else {
            sql.SELECT("CONTRACTID");
        }
        sql.SELECT("CONTRACTNUMBER");
        sql.SELECT("BUSINESSID");
        sql.SELECT("PRICE");
        sql.SELECT("DUETIME");
        sql.SELECT("OWNERUSERID");
        sql.SELECT("CREATORUSERID");
        sql.SELECT("DESCRIPTION");
        sql.SELECT("CREATETIME");
        sql.SELECT("UPDATETIME");
        sql.SELECT("STARTDATE");
        sql.SELECT("ENDDATE");
        sql.SELECT("STATUS");
        sql.SELECT("ISDELETED");
        sql.SELECT("DELETEUSERID");
        sql.SELECT("DELETETIME");
        sql.FROM("TB_CRM_CONTRACT");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        TbCrmContract record = (TbCrmContract) parameter.get("record");
        TbCrmContractExample example = (TbCrmContractExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("TB_CRM_CONTRACT");
        
        if (record.getContractid() != null) {
            sql.SET("CONTRACTID = #{record.contractid,jdbcType=VARCHAR}");
        }
        
        if (record.getContractnumber() != null) {
            sql.SET("CONTRACTNUMBER = #{record.contractnumber,jdbcType=VARCHAR}");
        }
        
        if (record.getBusinessid() != null) {
            sql.SET("BUSINESSID = #{record.businessid,jdbcType=VARCHAR}");
        }
        
        if (record.getPrice() != null) {
            sql.SET("PRICE = #{record.price,jdbcType=DECIMAL}");
        }
        
        if (record.getDuetime() != null) {
            sql.SET("DUETIME = #{record.duetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOwneruserid() != null) {
            sql.SET("OWNERUSERID = #{record.owneruserid,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatoruserid() != null) {
            sql.SET("CREATORUSERID = #{record.creatoruserid,jdbcType=VARCHAR}");
        }
        
        if (record.getDescription() != null) {
            sql.SET("DESCRIPTION = #{record.description,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatetime() != null) {
            sql.SET("CREATETIME = #{record.createtime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatetime() != null) {
            sql.SET("UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStartdate() != null) {
            sql.SET("STARTDATE = #{record.startdate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getEnddate() != null) {
            sql.SET("ENDDATE = #{record.enddate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("STATUS = #{record.status,jdbcType=VARCHAR}");
        }
        
        if (record.getIsdeleted() != null) {
            sql.SET("ISDELETED = #{record.isdeleted,jdbcType=DECIMAL}");
        }
        
        if (record.getDeleteuserid() != null) {
            sql.SET("DELETEUSERID = #{record.deleteuserid,jdbcType=VARCHAR}");
        }
        
        if (record.getDeletetime() != null) {
            sql.SET("DELETETIME = #{record.deletetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContractcontent() != null) {
            sql.SET("CONTRACTCONTENT = #{record.contractcontent,jdbcType=BLOB}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String updateByExampleWithBLOBs(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("TB_CRM_CONTRACT");
        
        sql.SET("CONTRACTID = #{record.contractid,jdbcType=VARCHAR}");
        sql.SET("CONTRACTNUMBER = #{record.contractnumber,jdbcType=VARCHAR}");
        sql.SET("BUSINESSID = #{record.businessid,jdbcType=VARCHAR}");
        sql.SET("PRICE = #{record.price,jdbcType=DECIMAL}");
        sql.SET("DUETIME = #{record.duetime,jdbcType=TIMESTAMP}");
        sql.SET("OWNERUSERID = #{record.owneruserid,jdbcType=VARCHAR}");
        sql.SET("CREATORUSERID = #{record.creatoruserid,jdbcType=VARCHAR}");
        sql.SET("DESCRIPTION = #{record.description,jdbcType=VARCHAR}");
        sql.SET("CREATETIME = #{record.createtime,jdbcType=TIMESTAMP}");
        sql.SET("UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP}");
        sql.SET("STARTDATE = #{record.startdate,jdbcType=TIMESTAMP}");
        sql.SET("ENDDATE = #{record.enddate,jdbcType=TIMESTAMP}");
        sql.SET("STATUS = #{record.status,jdbcType=VARCHAR}");
        sql.SET("ISDELETED = #{record.isdeleted,jdbcType=DECIMAL}");
        sql.SET("DELETEUSERID = #{record.deleteuserid,jdbcType=VARCHAR}");
        sql.SET("DELETETIME = #{record.deletetime,jdbcType=TIMESTAMP}");
        sql.SET("CONTRACTCONTENT = #{record.contractcontent,jdbcType=BLOB}");
        
        TbCrmContractExample example = (TbCrmContractExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("TB_CRM_CONTRACT");
        
        sql.SET("CONTRACTID = #{record.contractid,jdbcType=VARCHAR}");
        sql.SET("CONTRACTNUMBER = #{record.contractnumber,jdbcType=VARCHAR}");
        sql.SET("BUSINESSID = #{record.businessid,jdbcType=VARCHAR}");
        sql.SET("PRICE = #{record.price,jdbcType=DECIMAL}");
        sql.SET("DUETIME = #{record.duetime,jdbcType=TIMESTAMP}");
        sql.SET("OWNERUSERID = #{record.owneruserid,jdbcType=VARCHAR}");
        sql.SET("CREATORUSERID = #{record.creatoruserid,jdbcType=VARCHAR}");
        sql.SET("DESCRIPTION = #{record.description,jdbcType=VARCHAR}");
        sql.SET("CREATETIME = #{record.createtime,jdbcType=TIMESTAMP}");
        sql.SET("UPDATETIME = #{record.updatetime,jdbcType=TIMESTAMP}");
        sql.SET("STARTDATE = #{record.startdate,jdbcType=TIMESTAMP}");
        sql.SET("ENDDATE = #{record.enddate,jdbcType=TIMESTAMP}");
        sql.SET("STATUS = #{record.status,jdbcType=VARCHAR}");
        sql.SET("ISDELETED = #{record.isdeleted,jdbcType=DECIMAL}");
        sql.SET("DELETEUSERID = #{record.deleteuserid,jdbcType=VARCHAR}");
        sql.SET("DELETETIME = #{record.deletetime,jdbcType=TIMESTAMP}");
        
        TbCrmContractExample example = (TbCrmContractExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    public String updateByPrimaryKeySelective(TbCrmContract record) {
        SQL sql = new SQL();
        sql.UPDATE("TB_CRM_CONTRACT");
        
        if (record.getContractnumber() != null) {
            sql.SET("CONTRACTNUMBER = #{contractnumber,jdbcType=VARCHAR}");
        }
        
        if (record.getBusinessid() != null) {
            sql.SET("BUSINESSID = #{businessid,jdbcType=VARCHAR}");
        }
        
        if (record.getPrice() != null) {
            sql.SET("PRICE = #{price,jdbcType=DECIMAL}");
        }
        
        if (record.getDuetime() != null) {
            sql.SET("DUETIME = #{duetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getOwneruserid() != null) {
            sql.SET("OWNERUSERID = #{owneruserid,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatoruserid() != null) {
            sql.SET("CREATORUSERID = #{creatoruserid,jdbcType=VARCHAR}");
        }
        
        if (record.getDescription() != null) {
            sql.SET("DESCRIPTION = #{description,jdbcType=VARCHAR}");
        }
        
        if (record.getCreatetime() != null) {
            sql.SET("CREATETIME = #{createtime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdatetime() != null) {
            sql.SET("UPDATETIME = #{updatetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStartdate() != null) {
            sql.SET("STARTDATE = #{startdate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getEnddate() != null) {
            sql.SET("ENDDATE = #{enddate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getStatus() != null) {
            sql.SET("STATUS = #{status,jdbcType=VARCHAR}");
        }
        
        if (record.getIsdeleted() != null) {
            sql.SET("ISDELETED = #{isdeleted,jdbcType=DECIMAL}");
        }
        
        if (record.getDeleteuserid() != null) {
            sql.SET("DELETEUSERID = #{deleteuserid,jdbcType=VARCHAR}");
        }
        
        if (record.getDeletetime() != null) {
            sql.SET("DELETETIME = #{deletetime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getContractcontent() != null) {
            sql.SET("CONTRACTCONTENT = #{contractcontent,jdbcType=BLOB}");
        }
        
        sql.WHERE("CONTRACTID = #{contractid,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table TB_CRM_CONTRACT
     *
     * @mbg.generated Wed Apr 25 10:14:37 CST 2018
     */
    protected void applyWhere(SQL sql, TbCrmContractExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}